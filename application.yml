server:
  port: 8079
  
logging:
  level:
    root: INFO

spring:
  application:
    name: mc-config-server-configuration
  main:
    web-application-type: reactive
    allow-bean-definition-overriding: true
    
  #security:
    #oauth2:
      #client:
        #keycloak:
          #client-id: admin
          #client-secret: admin
          #scopes: openid
        #provider:
          #issuer-uri: http://localhost:8083/realms/master
     
  session:
    store-type: redis
  redis:
    host: localhost
    port: 6379  
            
  cloud:
    gateway:
      #default-filters:
        #- TokenRelay
        #- name: RequestRateLimiter
          #args:
            #redis-rate-limiter.replenishRate: 10
            #redis-rate-limiter.burstCapacity: 20
      routes:
        - id: MC-CUSTOMER-ADDRESS
          uri: lb://MC-CUSTOMER-ADDRESS
          predicates: 
            - Path=/customer/**
          filters: 
            - name: Retry
              args:
                retries: 3
                methods: GET
                backoff:
                  firstBackoff: 50ms
                  maxBackoff: 500ms
            - name: CircuitBreaker
              args: 
                name: customerAddressService
                fallbackUri: forward:/fallback/customer-address
                
        - id: MC-ZIP-CODE-VALIDATOR
          uri: lb://MC-ZIP-CODE-VALIDATOR
          predicates: 
            - Path=/zip/**
          filters: 
            - name: Retry
              args:
                retries: 3
                methods: GET
                backoff:
                  firstBackoff: 50ms
                  maxBackoff: 500ms
            - name: CircuitBreaker
              args: 
                name: zipCodeValidatorService
                fallbackUri: forward:/fallback/zip-code-validator
                
        - id: MC-USER-SERVICE
          uri: lb://MC-USER-SERVICE
          predicates: 
            - Path=/**
          filters: 
            - name: Retry
              args:
                retries: 3
                methods: GET
                backoff:
                  firstBackoff: 50ms
                  maxBackoff: 500ms
            - name: CircuitBreaker
              args: 
                name: userService
                fallbackUri: forward:/fallback/user-service
                
        - id: MC-KAFKA-CUSTOMER-CONSUMER
          uri: lb://MC-KAFKA-CUSTOMER-CONSUMER
          predicates: 
            - Path=/**
          filters: 
            - name: Retry
              args:
                retries: 3
                methods: GET
                backoff:
                  firstBackoff: 50ms
                  maxBackoff: 500ms
            - name: CircuitBreaker
              args: 
                name: kafkaCustomerConsumer
                fallbackUri: forward:/fallback/kafka-customer-consumer
                
        - id: MC-MONGO-PROVIDER
          uri: lb://MC-MONGO-PROVIDER
          predicates: 
            - Path=/**
          filters: 
            - name: Retry
              args:
                retries: 3
                methods: GET
                backoff:
                  firstBackoff: 50ms
                  maxBackoff: 500ms
            - name: CircuitBreaker
              args: 
                name: mongoProvider
                fallbackUri: forward:/fallback/mongo-provider

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    preferIpAddress: true

resilience4j:
  circuitbreaker:
    instances:
      customerAddressService:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        registerHealthIndicator: true
        
      zipCodeValidatorService:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        registerHealthIndicator: true
        
      userService:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        registerHealthIndicator: true
  timelimiter:
    instances:
      customerAddressService:
        timeoutDuration: 2s
        
keycloak:
  realm: master
  auth-server-url: http://localhost:8083/auth
  resource: admin-cli
  public-client: true
  bearer-only: true
    